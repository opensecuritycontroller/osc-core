<project name="vmidcDeployMgr" default="build" basedir="." 
    xmlns:if="ant:if"
    xmlns:unless="ant:unless"
>
	<description>a vmidc deploy tool</description>

	<property name="build-all-images" value="false" />
	<target name="ovf" depends="build,ovfOnly,ovfCopy" description="build all and generate vmidc ovf" />

	<target name="build">
		<echo>Ant version: ${ant.version}</echo>
		<echo>Ant Java/JVM version: ${ant.java.version}</echo>
		<echo>Java/JVM detail version: ${java.version}</echo>
		<exec executable="mvn">
			<arg value="-version" />
		</exec>
		<exec executable="mvn" failonerror="true">
			<arg value="clean" />
			<arg value="install" />
			<arg value="-Dmaven.test.skip=true" />
            <arg value="-PuseGit" if:true="${useGit}"/>
		</exec>
	</target>

	<target name="ovfOnly" depends="repoVersion,prodVersion" description="Runs ovfBuild and cleans up on error">
		<waitfor maxwait="20" maxwaitunit="minute" checkevery="10" checkeveryunit="second">
			<not>
				<available file="/tmp/build_marker"/>
			</not>
		</waitfor>
		<touch file="/tmp/build_marker"/>
		<exec executable="schroot" resultproperty="ovf.result" dir="osc-server-bom/">
			<arg value="-c" />
			<arg value="centos" />
			<arg value="--" />
			<arg value="ant" />
			<arg value="-Dbuild-all-images=${build-all-images}"/>
			<arg value="-Dbranchname=${branchname}" />
			<arg value="-DbuildNumber=${buildNumber}" />
			<arg value="-DproductVersion=${productVersion}" />
		</exec>
		<delete file="/tmp/build_marker"/>
	</target>

	<target name="ovfCopy" depends="repoVersion,prodVersion" description="Copy result files to build dir">
		<delete includeemptydirs="true">
		    <fileset dir="." includes="Build*/**"/>
		</delete>
		<mkdir dir="Build${buildNumber}" />
		<copy file="target/serverUpgradeBundle.zip" tofile="Build${buildNumber}/serverUpgradeBundle-${buildNumber}.zip" />
        
		<copy file="${user.home}/.m2/repository/org/osc/plugin/security-mgr-sample-plugin/1.0/security-mgr-sample-plugin-1.0.bar" tofile="Build${buildNumber}/SampleMgrPlugin.bar" />
		<copy file="${user.home}/.m2/repository/com/mcafee/osc/security-mgr-nsm-plugin/1.0/security-mgr-nsm-plugin-1.0.bar" tofile="Build${buildNumber}/NsmMgrPlugin.bar" />
		<copy file="${user.home}/.m2/repository/com/forcepoint/osc/security-mgr-smc-plugin/1.0/security-mgr-smc-plugin-1.0.bar" tofile="Build${buildNumber}/SmcMgrPlugin.bar" />
		<copy file="${user.home}/.m2/repository/org/osc/plugin/sdn-controller-nsc-plugin/1.0/sdn-controller-nsc-plugin-1.0.bar" tofile="Build${buildNumber}/NscSdnControllerPlugin.bar" />
        <copy file="${user.home}/.m2/repository/com/vmware/osc/vmware-nsx-plugin/1.0/vmware-nsx-plugin-1.0.bar" tofile="Build${buildNumber}/VMwareNsxPlugin.bar" />
		<move file="osc-server-bom/OSC_disk-0.vmdk" tofile="Build${buildNumber}/OSC_disk-0.vmdk" />
		<move file="osc-server-bom/OSC_disk-0.qcow2" tofile="Build${buildNumber}/OSC_disk-0.qcow2" quiet="true" failonerror="false" />
		<move file="osc-server-bom/OSC_disk-0-raw.img" tofile="Build${buildNumber}/OSC_disk-0-raw.img" quiet="true" failonerror="false" />
		<copy file="osc-server-bom/OSC.ovf" tofile="Build${buildNumber}/OSC-${buildNumber}.ovf" />
		<replace file="Build${buildNumber}/OSC-${buildNumber}.ovf" token="$OSC_VERSION" value="${productVersion}"/>
		<zip destfile="Build${buildNumber}/OSC-${productVersion}_Build${buildNumber}.zip">
			<fileset dir="Build${buildNumber}"
				includes="**/*.vmdk **/*.ovf **/serverUpgradeBundle-*.zip" />
		</zip>
	</target>

	<target name="repoVersion">
		<exec outputproperty="buildNumber" dir="."
            executable="sh" failonerror="true" >
			<arg value="-c" />
            <arg value="git describe | cut -d '-' -f 2-3" />
		</exec>
		<echo>Committed Revision: ${buildNumber}</echo>
	</target>

	<target name="prodVersion">
		<exec outputproperty="productVersion" executable="cat" failonerror="true">
			<arg value="version.txt" />
		</exec>
	</target>

</project>
